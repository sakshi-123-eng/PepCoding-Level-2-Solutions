Question Link:-

https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/recursion-and-backtracking/queens-combinations-2das2d-official/ojquestion


Code:-

#include<bits/stdc++.h>
using namespace std;

void queensCombination2(int qpsf, int tq, vector<vector<bool>>&chess, int i, int j){
    if(qpsf == tq){
        for(int row =0; row<chess.size(); row++){
            for(int col =0; col<chess.size(); col++){
                if(chess[row][col] == true){
                    cout<<"q"<<"	";
                }else{
                    cout<<"-"<<"	";
                }
            }
            cout<<"\n";
        }
        cout<<"\n";
        return;
    }
    
    for(int col =j+1; col<chess.size(); col++){
        chess[i][col] = true;
        queensCombination2(qpsf + 1, tq, chess, i, col);
        chess[i][col] = false;
    }
    
    for(int row =i+1; row<chess.size(); row++){
        for(int col =0; col<chess.size(); col++){
            chess[row][col] = true;
            queensCombination2(qpsf + 1, tq, chess, row, col);
            chess[row][col] = false;
        }
    }
    
}


int main(){
    int n;
    cin>>n;
    
    vector<vector<bool>> chess(n,vector<bool>(n, false));
    queensCombination2(0, n, chess, 0, -1);
    
    return 0;
}
